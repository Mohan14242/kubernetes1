apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: roboshop-admin
subjects:
# You can specify more than one "subject"
- kind: User
  name: chiru # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
data:
  mapRoles: |
    - groups:
      - system:bootstrappers
      - system:nodes
      rolearn: arn:aws:iam::339712780863:role/eksctl-eks-spot-cluster3-nodegroup-NodeInstanceRole-muv6hHrUsDHr
      username: system:node:{{EC2PrivateDNSName}}
  mapusers: |
    - groups: 
      - roboshop-admin 
      userarn: arn:aws:iam::339712780863:user/chiru
      username: chiru 
kind: ConfigMap
metadata:
  creationTimestamp: "2024-05-01T04:40:22Z"
  name: aws-auth
  namespace: kube-system
  resourceVersion: "1330"
  uid: 82370405-3f9f-4f22-9aef-3f7f8a003d8b

